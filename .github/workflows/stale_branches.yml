name: Delete Stale Branches

on:
  push:
    branches:
      - main  # Trigger on push to the main branch, adjust if necessary
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  delete_stale_branches:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Check out the code in the repository

    - name: Set up Git credentials with the PAT
      run: |
        # Use the Personal Access Token (PAT) for authentication
        git remote set-url origin https://x-access-token:${{ secrets.STALE_BRANCHES_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Fetch all branches from the remote
      run: |
        # Fetch all branches from the remote repository
        git fetch --all

    - name: List all branches with their last commit date
      run: |
        echo "Listing all branches with their last commit date:"
        # Loop through each remote branch
        for branch in $(git branch -r | grep -v '\->'); do
          # Skip the 'main' branch to prevent deletion of the active branch
          if [[ "$branch" == "origin/main" ]]; then
            echo "Skipping deletion of the main branch: $branch"
            continue
          fi

          # Get the last commit date for each branch
          last_commit_date=$(git log -1 --format=%ct origin/${branch#origin/})
          # Get the current time
          current_time=$(date +%s)
          # Calculate the time difference in seconds
          time_diff=$((current_time - last_commit_date))
          # If the branch hasn't been used in the last 5 minutes (300 seconds), delete it
          if [ $time_diff -gt 300 ]; then
            echo "Deleting stale branch: $branch"
            # Delete the stale branch from the remote repository
            git push origin --delete ${branch#origin/}
          else
            echo "Branch $branch is not stale (used within the last 5 minutes)."
          fi
        done
